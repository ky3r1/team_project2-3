//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64 [unused]
//   float4 options;                    // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   float4 ambient_color;              // Offset:    0 Size:    16
//   float4 directional_light_direction;// Offset:   16 Size:    16
//   float4 directional_light_color;    // Offset:   32 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// color_sampler_state               sampler      NA          NA             s0      1 
// ramp_sampler_state                sampler      NA          NA             s2      1 
// color_map                         texture  float4          2d             t0      1 
// ramp_map                          texture  float4          2d             t2      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb2      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB2[6], immediateIndexed
dcl_constantbuffer CB3[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 4
add r0.xyz, v1.xyzx, -cb2[5].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, cb3[1].xyzx, cb3[1].xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, cb3[1].xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v2.xyzx
dp3 r0.w, r1.xyzx, r2.xyzx
add r0.w, r0.w, r0.w
mad r3.xyz, r2.xyzx, -r0.wwww, r1.xyzx
dp3 r0.w, r2.xyzx, -r1.xyzx
mad_sat r1.x, r0.w, l(0.500000), l(0.500000)
dp3 r0.x, -r0.xyzx, r3.xyzx
max r0.x, r0.x, l(0.000000)
log r0.x, r0.x
mul r0.x, r0.x, l(128.000000)
exp r0.x, r0.x
mov r1.y, l(0.500000)
sample_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t2.yxzw, s2
mul r0.yzw, r0.yyyy, cb3[2].xxyz
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v4.xyxx, t0.xyzw, s0
mul r1.xyzw, r1.xyzw, v3.xyzw
mad r0.yzw, r1.xxyz, r0.yyzw, cb3[0].xxyz
mov o0.w, r1.w
mad o0.xyz, cb3[2].xyzx, r0.xxxx, r0.yzwy
ret 
// Approximately 29 instruction slots used
