//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64 [unused]
//   float4 options;                    // Offset:   64 Size:    16 [unused]
//   float4 camera_position;            // Offset:   80 Size:    16
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   float4 ambient_color;              // Offset:    0 Size:    16
//   float4 directional_light_direction;// Offset:   16 Size:    16
//   float4 directional_light_color;    // Offset:   32 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// color_sampler_state               sampler      NA          NA             s0      1 
// ramp_sampler_state                sampler      NA          NA             s2      1 
// color_map                         texture  float4          2d             t0      1 
// ramp_map                          texture  float4          2d             t2      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb2      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// COLOR                    0   xyzw        3     NONE   float       
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[6], immediateIndexed
dcl_constantbuffer CB3[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 9
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.world_position.x; v1.y <- pin.world_position.y; v1.z <- pin.world_position.z; v1.w <- pin.world_position.w; 
//   v2.x <- pin.world_normal.x; v2.y <- pin.world_normal.y; v2.z <- pin.world_normal.z; v2.w <- pin.world_normal.w; 
//   v3.x <- pin.color.x; v3.y <- pin.color.y; v3.z <- pin.color.z; v3.w <- pin.color.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 10 "C:\Users\2230121\Desktop\2年チEỷ制作\team_project2-3\HLSL\Ramp_shader_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s0  // r0.x <- diffuse_color.x; r0.y <- diffuse_color.y; r0.z <- diffuse_color.z; r0.w <- diffuse_color.w

#line 12
mov r1.xyz, -cb2[5].xyzx
add r1.xyz, r1.xyzx, v1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- E.x; r1.y <- E.y; r1.z <- E.z

#line 13
dp3 r1.w, cb3[1].xyzx, cb3[1].xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, cb3[1].xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 14
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx  // r3.x <- N.x; r3.y <- N.y; r3.z <- N.z

#line 16
itof r4.xyz, l(1, 1, 1, 0)  // r4.x <- ka.x; r4.y <- ka.y; r4.z <- ka.z

#line 17
itof r5.xyz, l(1, 1, 1, 0)  // r5.x <- kd.x; r5.y <- kd.y; r5.z <- kd.z

#line 18
itof r6.xyz, l(1, 1, 1, 0)  // r6.x <- ks.x; r6.y <- ks.y; r6.z <- ks.z

#line 20
mul r4.xyz, r4.xyzx, cb3[0].xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z

#line 21
nop 
nop 
nop 
mov r3.xyz, r3.xyzx
mov r2.xyz, r2.xyzx
mov r7.xyz, cb3[2].xyzx
mov r5.xyz, r5.xyzx

#line 68 "C:\Users\2230121\Desktop\2年チーム制作\team_project2-3\HLSL\shading_functions.hlsli"
mov r8.xyz, -r2.xyzx
dp3 r1.w, r3.xyzx, r8.xyzx
mul r1.w, r1.w, l(0.500000)
add r1.w, r1.w, l(0.500000)
max r1.w, r1.w, l(0.000000)
min r8.x, r1.w, l(1.000000)  // r8.x <- D

#line 69
mov r8.y, l(0.500000)
sample_indexable(texture2d)(float,float,float,float) r1.w, r8.xyxx, t2.yzwx, s2
mov r1.w, r1.w  // r1.w <- Ramp

#line 70
mul r7.xyz, r1.wwww, r7.xyzx
mul r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- <CalcRampShading return value>.x; r5.y <- <CalcRampShading return value>.y; r5.z <- <CalcRampShading return value>.z

#line 21 "C:\Users\2230121\Desktop\2年チEム制作\team_project2-3\HLSL\Ramp_shader_ps.hlsl"
mov r5.xyz, r5.xyzx  // r5.x <- directional_diffuse.x; r5.y <- directional_diffuse.y; r5.z <- directional_diffuse.z

#line 23
nop 
mov r3.xyz, r3.xyzx
mov r2.xyz, r2.xyzx
mov r1.xyz, r1.xyzx
mov r7.xyz, cb3[2].xyzx
mov r6.xyz, r6.xyzx

#line 24 "C:\Users\2230121\Desktop\2年チーム制作\team_project2-3\HLSL\shading_functions.hlsli"
dp3 r1.w, r2.xyzx, r3.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r3.xyz, r1.wwww, r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- R.x; r2.y <- R.y; r2.z <- R.z

#line 25
mov r1.xyz, -r1.xyzx
dp3 r1.x, r1.xyzx, r2.xyzx
itof r1.y, l(0)
max r1.x, r1.y, r1.x  // r1.x <- power

#line 26
itof r1.y, l(128)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x  // r1.x <- power

#line 27
mul r1.xyz, r1.xxxx, r7.xyzx
mul r1.xyz, r6.xyzx, r1.xyzx  // r1.x <- <CalcPhongSpecular return value>.x; r1.y <- <CalcPhongSpecular return value>.y; r1.z <- <CalcPhongSpecular return value>.z

#line 23 "C:\Users\2230121\Desktop\2年チEム制作\team_project2-3\HLSL\Ramp_shader_ps.hlsl"
mov r1.xyz, r1.xyzx  // r1.x <- directional_sprcular.x; r1.y <- directional_sprcular.y; r1.z <- directional_sprcular.z

#line 25
mov r4.xyz, r4.xyzx  // r4.x <- color.x; r4.y <- color.y; r4.z <- color.z
mov r0.w, r0.w  // r0.w <- color.w

#line 26
mul r0.xyz, r0.xyzx, r5.xyzx
add r0.xyz, r0.xyzx, r4.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 27
add r0.xyz, r1.xyzx, r0.xyzx

#line 29
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 65 instruction slots used
