#pragma once
#include "All.h"

//マップの最大値＋周りの壁
#define MAPMAX_X 10+2
#define MAPMAX_Z 15+2
#define NEXTCHIP 2
//ステージ種類の最大値
#define CATEGORYMAX 3
//ステージの種類
#define NONE -2
#define WALL -1
#define FLOOR 0
#define HOLE 1
#define SPIKE 2
//コストの最大値・最小値
#define COST_MAX 100
#define COST_MIN 0

class StageMapChip
{
public:
	StageMapChip();
	~StageMapChip() {}
	//唯一のインスタンス取得
	static StageMapChip& Instance()
	{
		static StageMapChip instance;
		return instance;
	}
	void Clear();

	//Characterの足元のマップチップを取得
	bool GetOnMapChip(DirectX::XMFLOAT3 p, DirectX::XMINT2& i);
	//足元のマップチップの種類を取得
	int GetOnCategory(DirectX::XMFLOAT3 p);
    //足元のマップチップのIDを取得
	int GetOnId(DirectX::XMFLOAT3 p);
    //マップチップのコストを設定
    int GetOnCost(DirectX::XMFLOAT3 p);

	//コンストラクタで呼び出されるマップチップのデータ設定
	void SetData(DirectX::XMFLOAT3 p,int x,int z);
	//x,zのマップチップ位置を取得
	DirectX::XMFLOAT3 GetPosition(int x, int z){ return position[z][x]; }
	//マップチップの種類を取得
	int GetCategory(int x, int z);

	//今のステージの種類のゲッター・セッター
	int GetStageNum() { return stagenum; };
	void SetStageNum(int c) { stagenum = c; }

	//次のマップチップの位置取得
	DirectX::XMFLOAT3 GetNextPosition(int x, int z) { return position[z][x]; }
private:
	//保存用と取り出す用
	//マップの種類:3、X軸:10、Z軸:20 (周りは‐1で囲む)
	int 	category[CATEGORYMAX][MAPMAX_Z][MAPMAX_X] =
	{
	//第1ステージ
	{
		//					10+2
		//	|---------------------------------------+
			{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//| 
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|15+2
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,-1},//-
	},
	//第2ステージ
	{
		//					10+2
		//	|---------------------------------------+
			{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//| 
			{-1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,-1},//|15+2
			{-1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,-1},//|
			{-1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,-1},//-
	},
	//第3ステージ
	{
		//					10+2
		//	|---------------------------------------+
			{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//| 
			{-1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,-1},//|
			{-1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,-1},//|
			{-1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,-1},//|15+2
			{-1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,-1},//|
			{-1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1},//|
			{-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,-1},//-
	},
	};
	DirectX::XMFLOAT3 position[MAPMAX_Z][MAPMAX_X] = {};
	int cost[MAPMAX_Z][MAPMAX_X] = {};
	int id[MAPMAX_Z][MAPMAX_X] = {};
	int id_count = 0;
	int stagenum = 0;
};